@startuml

class Suit {
    +SPADES: Suit
    +HEARTS: Suit
    +DIAMONDS: Suit
    +CLUBS: Suit
    +__str__(): string
}

class Card {
    -_rank: string
    -_suit: Suit
    +__init__(rank: string, suit: Suit)
    +value(): int
    +__str__(): string
}

class Deck {
    -_cards: List<Card>
    +__init__(): None
    +draw(): Card
}

class Game {
    -_deck: Deck
    -_players: List<Bot>
    -_dealer: Dealer
    -_rounds: int
    -_current_round: int
    +__init__(num_bots: int = 3, rounds: int = 5): void
    -_set_bets(): void
    -_deal_initial_cards(): void
    -_show_hands(): void
    -_play_round(): void
    -_determine_winner(): void
    -_reset_game(): void
    +play(): void
}

class Player {
    + name: str
    - _hand: List[Card]
    - _balance: int
    - _bet: int
    + __init__(name: str)
    + set_bet(amount: int)
    + adjust_balance(amount: int)
    + add_card(card: Card)
    + calculate_score(): int
    - make_move(deck: Deck)
}

class HistoryDict {
    + bets: List[int]
    + results: List[str]
}

class Bot {
    - _strategy: Strategy
    - _history: HistoryDict
    + __init__(name: str, strategy: Strategy)
    - _add_history(bet: int, result: str)
    + make_move(deck: Deck)
}

class Dealer {
    + __init__()
}

class Strategy {
    {abstract} +make_move(bot: Bot, deck: Deck): void
}

class AggressiveStrategy {
    +make_move(bot: Bot, deck: Deck): void
}

class ConservativeStrategy {
    +make_move(bot: Bot, deck: Deck): void
}

class RiskyStrategy {
    +make_move(bot: Bot, deck: Deck): void
}

class BasicStrategy {
    +make_move(bot: Bot, deck: Deck): void
}

class AdaptiveStrategy {
    +make_move(bot: Bot, deck: Deck): void
    -_play_aggressive(bot: Bot, deck: Deck): void
    -_play_conservative(bot: Bot, deck: Deck): void
    -_play_basic(bot: Bot, deck: Deck): void
}




Card --> Suit
Deck "1" *-- "*" Card

Player "1" o-- "*" Card

Bot "1" --> "1" Strategy
Bot -->  HistoryDict

Game "1" *-- "1" Deck
Game "1" *-- "*" Player
Game "1" *-- "1" Dealer

Player <|-- Dealer
Player <|-- Bot

Strategy <|-- AggressiveStrategy
Strategy <|-- ConservativeStrategy
Strategy <|-- RiskyStrategy
Strategy <|-- BasicStrategy
Strategy <|-- AdaptiveStrategy


@enduml
